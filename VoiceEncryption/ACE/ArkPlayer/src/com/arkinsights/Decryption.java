/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.arkinsights;

import java.awt.Color;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.math.BigInteger;
import java.security.Key;
import java.security.MessageDigest;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author ark-insingths
 */
public class Decryption extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    /**
     * Creates new form Decryption
     */
    final JFileChooser fcVoice;
    FileFilter filterVoice;
    IP2sMediaPlayer ip2s;
    IP2sRSA rsa;
    ObjectInputStream keyIn;
    Key key;
    InputStream in;

    public Decryption(String[] args) {
        try {

            rsa = new IP2sRSA();
            File dir = new File(System.getProperty("java.io.tmpdir")+"\\YPRISVGMUPO\\");
            File customDir = new File(System.getProperty("java.io.tmpdir")+"\\YPRISVGMUPO\\");

            if (customDir.exists()) {
                System.out.println(customDir + " already exists");
            } else if (customDir.mkdirs()) {
                System.out.println(customDir + " was created");
            } else {
                System.out.println(customDir + " was not created");
            }

            File[] f = dir.listFiles();
            for (File f1 : f) {
                if (f1.getName().endsWith(".temp")) {
                    try {
                        f1.delete();
                    } catch (Exception e) {
                        f1.deleteOnExit();
                    }
                }
            }
        } catch (Exception e) {
            ;
        }
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
        fcVoice = new JFileChooser();
        fcVoice.setAcceptAllFileFilterUsed(false);
        filterVoice = new FileNameExtensionFilter("Voice Encryption (.enc)", "enc");
        fcVoice.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fcVoice.addChoosableFileFilter(filterVoice);
        fcVoice.setFileFilter(filterVoice);
        initComponents();
        this.getContentPane().setBackground(new Color(204, 255, 255));
        tfVoicePath.setEditable(false);
        btVoiceFile.requestFocus();
        try {
            if (args != null) {
                if (args[0].endsWith(".enc")) {
                    tfVoicePath.setText(args[0]);
                } else {
                    this.setVisible(true);
                    JOptionPane.showMessageDialog(this, "Select file type invalid");
                }
            }
        } catch (Exception e) {
            //   JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbVoiceFile = new javax.swing.JLabel();
        tfVoicePath = new javax.swing.JTextField();
        btVoiceFile = new javax.swing.JButton();
        btPlay = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ark-Insights Recording Player");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(200, 200, 0, 0));
        setResizable(false);

        lbVoiceFile.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lbVoiceFile.setText("Voice File (*.enc)");

        tfVoicePath.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btVoiceFile.setBackground(new java.awt.Color(0, 153, 153));
        btVoiceFile.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btVoiceFile.setForeground(new java.awt.Color(255, 255, 255));
        btVoiceFile.setText("Voice");
        btVoiceFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoiceFileActionPerformed(evt);
            }
        });

        btPlay.setBackground(new java.awt.Color(0, 102, 102));
        btPlay.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        btPlay.setForeground(new java.awt.Color(255, 255, 255));
        btPlay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/arkinsights/play_button.png"))); // NOI18N
        btPlay.setBorderPainted(false);
        btPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPlayActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/arkinsights/logo_ark.jpg"))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Recording Player(off-site)");

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("The voice file(*.enc) required key file (*.key) at the same name and directory.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(257, 257, 257))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(346, 346, 346)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lbVoiceFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfVoicePath, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btVoiceFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(jLabel1)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbVoiceFile)
                            .addComponent(tfVoicePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btVoiceFile)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(824, 282));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btVoiceFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoiceFileActionPerformed
        // TODO add your handling code here:
        // tfVoicePath.setText("");
        int returnVal = fcVoice.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fcVoice.getSelectedFile();
            String fileName = file.getAbsolutePath();
            tfVoicePath.setText(fileName);
            fileName = fileName.substring(0, fileName.indexOf(".enc"));
//            tfPrivatePath.setText(fileName + ".key");
        }
    }//GEN-LAST:event_btVoiceFileActionPerformed

    private void btPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPlayActionPerformed
        // TODO add your handling code here:
        
        try {
            // Runtime.getRuntime().freeMemory();
            if (tfVoicePath.getText().trim().length() == 0) {
                throw new Exception("Please Select Voice File");
            }
            if (ip2s == null) {
                ip2s = new IP2sMediaPlayer(this);
            } else {
                try {
                    ip2s.close();
                } catch (Exception e) {
                    ;
                }
                ip2s = new IP2sMediaPlayer(this);
            }
            rsa.setKeyGenerator();
            rsa.setSecretKey();
            File file = null;
            if (fcVoice == null || fcVoice.getSelectedFile() == null) {
                file = new File(tfVoicePath.getText());
            } else {
                file = fcVoice.getSelectedFile();
            }
            String privateKeyName = tfVoicePath.getText().substring(0, tfVoicePath.getText().indexOf(".enc"));
            in = new FileInputStream(privateKeyName + ".key");
            try {
                keyIn = new ObjectInputStream(in);
                key = (Key) keyIn.readObject();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Invalid Type Of File");
                return;
            }
            rsa.setPrivateKey(key);
            String fileName = getMD5(file.getName()) + ".temp";
            String pathFile = System.getProperty("java.io.tmpdir")+"//YPRISVGMUPO//";
            File temp = new File(pathFile);
            rsa.setDataOutputDecrypt(pathFile + fileName);
            boolean bDec = rsa.decrypt(tfVoicePath.getText());
            in.close();
             btPlay.setEnabled(false);
            ip2s.play(fileName, pathFile+fileName, 1.0f, file.getName());
           
        } catch (Exception e) {
            System.out.println("Error : " + e.getMessage());
            String message = e.getMessage();
            if (message.trim().length() == 0) {
                message = "Invalid Type Of File";
            }
            if (e.getMessage().equals("Unwrapping failed")) {
                message = "Invalid Key File";
            }
            JOptionPane.showMessageDialog(this, message);
            btPlay.setEnabled(true);
        }
    }//GEN-LAST:event_btPlayActionPerformed

    private String getMD5(String trackID) throws Exception {
        MessageDigest m = MessageDigest.getInstance("MD5");
        m.update(trackID.getBytes(), 0, trackID.length());
        String md5 = new BigInteger(1, m.digest()).toString(16);
        return md5;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Decryption(args).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btPlay;
    private javax.swing.JButton btVoiceFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lbVoiceFile;
    private javax.swing.JTextField tfVoicePath;
    // End of variables declaration//GEN-END:variables
}
